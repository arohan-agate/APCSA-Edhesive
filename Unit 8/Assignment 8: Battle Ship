Board.java
----------
import java.util.ArrayList;
public class Board {
  
    private String[][] squares;
    private ArrayList <Integer> lengths = new ArrayList <Integer>();
    
    public Board() {
        squares = new String[10][10];
        
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                squares[i][j] = "-";
            }
        }
    }
    
    public String toString() {
        String board = "";
        
        for (String[] row: squares) {
            for (String cell: row) {
                board += cell + " ";
            }
            
            board += "\n";
        }
        return board;
    }
    
    public boolean addShip(int row, int col, int len, boolean horizontal) {
        if (row < 0 || col < 0 || len <= 0 || row > 9 || col > 9) {
            return false;
        }
        
        if (horizontal && col + len - 1 > 9) {
            return false;
        }
        
        if (!horizontal && row + len - 1 > 9) {
            return false;
        }
        
        if (horizontal) {
          
            for (int i = 0; i < len; i++) {
                if (squares[row][col + i].equals("b")) {
                    return false;
                }
            }
            
            for (int i = 0; i < len; i++) {
                squares[row][col + i] = "b";
                lengths.add(len);
            }
        } else {
          
            for (int i = 0; i < len; i++) {
                if (squares[row + i][col].equals("b")) {
                    return false;
                }
            }
            
            for (int i = 0; i < len; i++) {
                squares[row + i][col] = "b";
                lengths.add(len);
            }
        }
        return true;
    }
    
    public boolean foundShip(int len) {
        return lengths.contains(len);
    }
    
    public int shoot(int row, int col) {
        if (row > 9 || row < 0 || col > 9 || col < 0) {
            return -1;
            
        } else if (squares[row][col].equals("-")) {
            squares[row][col] = "m";
            return 0;
            
        } else if (squares[row][col].equals("b")) {
            squares[row][col] = "x";
            return 1;
            
        } else {
            return 2;
        }
    }
    
    public boolean gameOver() {
        for (String[] row: squares) {
            for (String cell: row) {
                if (cell.equals("b")) {
                    return false;
                }
            }
        }
        return true;
    }
}

-----------------------------------------------------

BattleShip.java
import java.util.Scanner;

public class Battleship
{
  public static void main(String[] args)
  {
    // Set up board and print welcome
    Board b = new Board();
    Scanner scan = new Scanner(System.in);
    System.out.println("Welcome to Battleship!\n");
    boolean addNew = true;

    while(addNew)
    {
      System.out.println("Type \"a\" to add new ship, \"b\" to see the board, \"p\" to play or \"q\" to quit.");
      String ans = scan.nextLine();
      if(ans.toLowerCase().equals("q"))
        return;
      if(ans.toLowerCase().equals("a"))
      {
        // Get parameters for new ship
        System.out.println("Starting in which row?");
        int r = scan.nextInt();
        System.out.println("Starting in which column?");
        int c = scan.nextInt();
        System.out.println("How long?");
        int l = scan.nextInt();
        scan.nextLine();
        System.out.println("Horizontal (h) or vertical (v)?");
        String d = scan.nextLine();
        boolean h = (d.toLowerCase().equals("h"));

        // Call addShip method and return message based on true/false value
        if(b.addShip(r, c, l, h))
        {
          System.out.println("\nNew ship added!\n");
        }
        else
          System.out.println("\nCan't put a ship there!\n");
      }
      else if(ans.toLowerCase().equals("b"))
        System.out.println("\n" + b + "\n");
      else if(ans.toLowerCase().equals("p"))
      {
        if(b.foundShip(3) && b.foundShip(4))
        {
          addNew = false;
          System.out.println("\nOk, let's play!\n");
        }
        else
          System.out.println("\nYou need ships of length 3 and 4 to play!\n");
      }
    }

    // As long as ships remain, play game
    while(!b.gameOver())
    {
      System.out.println("Press \"s\" to shoot at a square, \"b\" to see the board, \"q\" to quit.");
      String ans = scan.nextLine();
      if(ans.toLowerCase().equals("q"))
        return;
      else if(ans.toLowerCase().equals("s")){
        // Get row and column to shoot
        System.out.println("Input row.");
        int r = scan.nextInt();
        System.out.println("Input column.");
        int c = scan.nextInt();

        // Perform shot and store result
        int result = b.shoot(r,c);

        // Choose message based on result
        if(result == 1)
          System.out.println("\nHit!\n");
        else if(result == 0)
          System.out.println("\nMiss!\n");
        else if(result == 2)
          System.out.println("\nYou already tried that.\n");
        else if(result == -1)
          System.out.println("\nInvalid coordinates.\n");
        scan.nextLine();
      }
      else if(ans.toLowerCase().equals("b"))
        System.out.println("\n" + b + "\n");
    }
    System.out.println("Game over!");
  }
}
